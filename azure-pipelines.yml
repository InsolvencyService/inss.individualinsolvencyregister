trigger:
- develop
  
pool:
  vmImage: windows-latest

variables:
- name: buildConfiguration
  value: 'Release'

parameters: 
- name: deployWebapp    
  type: boolean    
  default: false
- name: deployfuncapp    
  type: boolean    
  default: false
- name: RunIntTest    
  type: boolean    
  default: true


resources:
  repositories:
  - repository: inss-devops-common-lib
    type: github
    endpoint: InsolvencyService
    name: InsolvencyService/inss-devops-common-lib
    ref: develop
    
stages:
- stage: BuildTest
  displayName: 'Build and Test'
  jobs:  
    - job: 
      steps:
      # - task: UseDotNet@2
      #   inputs:
      #     version: '6.0.x'

      # - task: DotNetCoreCLI@2
      #   displayName: NuGet Restore
      #   inputs:
      #     command: 'restore'
      #     projects: |
      #       **/INSS.EIIR*.csproj
      #       !**/INSS.EIIR*Tests.csproj
  
      - task: Npm@1
        inputs:
          command: 'ci' 
          workingDir: $(System.DefaultWorkingDirectory)/INSS.EIIR.WEB

      - script: |
          ls -a **/appsettings-temp*.json
          ls $(System.DefaultWorkingDirectory)

      # - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      #   displayName: Replace Tokens
      #   inputs:
      #     # rootDirectory: $(Build.SourcesDirectory)/inss-individualinsolvencyregister/INSS.EIIR.QA.Automation
      #     targetFiles: |
      #       *QA*/appsettings-temp*.json
      #       *QA*/appsettings-temp*.json ==>*QA*/appsettings.json
      #     encoding: 'auto'
      #     verbosity: 'detailed'
      #     actionOnMissing: 'log warning'
      #     keepToken: false
      #     tokenPrefix: '__'
      #     tokenSuffix: '__'
      #     useLegacyPattern: false
      #     enableTelemetry: false

      # - task: DotNetCoreCLI@2
      #   displayName: 'Build Solution'
      #   inputs:
      #     command: 'build'
      #     # projects: '**/INSS.EIIR*.csproj'
      #     projects: |
      #       **/INSS.EIIR*.csproj
      #       !**/INSS.EIIR*Tests.csproj
      #     arguments: '--configuration $(buildConfiguration)'
      #   env:
      #     MSBUILDSINGLELOADCONTEXT: '1'       

      # - task: DotNetCoreCLI@2
      #   displayName: 'Run Tests'
      #   inputs:
      #     command: test
      #     projects: '**/*Tests/*.csproj'
      #     arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

      # - task: DotNetCoreCLI@2
      #   displayName: 'Publish Project'
      #   inputs:
      #     command: 'publish'
      #     publishWebProjects: false
      #     # projects: '**/*.csproj'
      #     projects: |
      #       **/INSS.EIIR*.csproj
      #       !**/INSS.EIIR*Tests.csproj
      #     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      #   env:
      #     MSBUILDSINGLELOADCONTEXT: '1' 
      # - task: PublishPipelineArtifact@1
      #   displayName: 'Publish Artifact'
      #   inputs:
      #     targetPath: '$(Build.ArtifactStagingDirectory)' 
      #     artifactName: 'INSS.EIIR'
      #   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))





- stage: RunIntTest
  displayName: 'Execute Int Tests'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: EIIR-int-test-Sit
  jobs:
    - deployment:
        displayName: Run Int Tests
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - ${{ if eq(parameters.RunIntTest, true) }}:
                  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
                    displayName: Replace Tokens
                    inputs:
                      # rootDirectory: $(Build.SourcesDirectory)/inss-individualinsolvencyregister/INSS.EIIR.QA.Automation
                      targetFiles: |
                        *QA*/appsettings-temp*.json
                        *QA*/appsettings-temp*.json ==>*QA*/appsettings.json
                      encoding: 'auto'
                      verbosity: 'detailed'
                      actionOnMissing: 'log warning'
                      keepToken: false
                      tokenPrefix: '__'
                      tokenSuffix: '__'
                      useLegacyPattern: false
                      enableTelemetry: false
                  - script: |
                      cat *QA*/appsettings.json






